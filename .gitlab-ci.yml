test:
  tags:
    - cvmfs
  only:
    - master                    # master release branch
    - develop                   # development branch 
  before_script:
    - set -o xtrace             # Print command before executing it
    - set -o errexit            # make your script exit when a command fails.
    - set -o pipefail           # exit status of the last command that threw a non-zero exit code is returned
    - shopt -s expand_aliases   # CRUCIAL for cmsrel, etc as aliases not expanded in non-interactive shells
    # Install missing packages
    - yum install which -y
    # Check CVMFS
    - ls /cvmfs/cms.cern.ch/
    # Get number of processors for scram build
    - MAKEFLAGS="-j $(grep -c ^processor /proc/cpuinfo)"
    # Set up dummy variables for github pull access. 
    - git config --global user.name "Foo Bar"
    - git config --global user.email "foo@bar.com"
    - git config --global user.github "foobar"
    # Set up and get the CMSSW release
    - source /cvmfs/cms.cern.ch/cmsset_default.sh
    - SCRAM_ARCH=slc7_amd64_gcc700
    - CMSSW_VERSION=CMSSW_10_6_14
    - export $SCRAM_ARCH
    - cmsrel $CMSSW_VERSION
    - cd $CMSSW_VERSION/src
    - eval "$(scramv1 runtime -sh)"
    - echo $CMSSW_BASE
    # Build required software
    - git clone https://github.com/JHU-Tools/2DAlphabet.git
    - git clone --branch 102x https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit.git HiggsAnalysis/CombinedLimit
    - curl -s https://raw.githubusercontent.com/JHU-Tools/CombineHarvester/master/CombineTools/scripts/sparse-checkout-ssh.sh | bash
    - scram b clean
    - scram b $MAKEFLAGS
    - python -m virtualenv twoD-env
    - source twoD-env/bin/activate
    - cd 2DAlphabet/
    - python setup.py develop
    - cd ..
  script:
    - echo "hello world"
